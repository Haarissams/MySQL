MySql editor link : https://onecompiler.com/mysql/42tqknhcr


-- Table for users (students, mentors, etc.)
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('student', 'mentor', 'admin') DEFAULT 'student',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for courses
CREATE TABLE courses (
    course_id INT AUTO_INCREMENT PRIMARY KEY,
    course_name VARCHAR(255) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for tasks (assignments or tasks under each course)
CREATE TABLE tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    course_id INT,
    task_title VARCHAR(255) NOT NULL,
    task_description TEXT,
    due_date DATE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
    ON DELETE CASCADE
);

-- Table for enrollments (many-to-many relation between users and courses)
CREATE TABLE enrollments (
    enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    course_id INT,
    enrollment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
    ON DELETE CASCADE
);

-- Table for submissions (to track task submissions by students)
CREATE TABLE submissions (
    submission_id INT AUTO_INCREMENT PRIMARY KEY,
    task_id INT,
    user_id INT,
    submission_link VARCHAR(255),
    submission_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (task_id) REFERENCES tasks(task_id)
    ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE
);

-- Optional: Table for tracking course progress
CREATE TABLE course_progress (
    progress_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    course_id INT,
    progress_percentage INT DEFAULT 0,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
    ON DELETE CASCADE
);

-- Table for reviews or feedback (if required)
CREATE TABLE reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    course_id INT,
    rating INT CHECK(rating >= 1 AND rating <= 5),
    review_text TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
    ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id)
    ON DELETE CASCADE
);



Input for the program : 

SHOW TABLES;